class t{constructor(t,i,e,s,h,l,r){this.ctx=t,this.x=i,this.y=e,this.tiltX=s,this.colorPrimary=h,this.size=l,this.viewingAngle=r}get apparentSize(){return this.viewingAngle-this.tiltX<1?3*this.size:this.size}draw(){this.ctx.beginPath(),this.ctx.rect(this.x,this.y,this.apparentSize,this.apparentSize),this.ctx.fillStyle=this.colorPrimary,this.ctx.fill(),this.ctx.closePath()}}class i{constructor(t,i,e){this.x=t,this.y=i,this.z=e}}const e=document.getElementById("canvas");new class{constructor(t,e,s,h){this.glitterParticles=[],this.tilt=new i(0,0,0),this.canvas=t,console.log(this.canvas),this.ctx=t.getContext("2d"),this.width=t.width,this.height=t.height,this.bgColor="black",this.glitterColors=s||["red","white","blue"],this.glitterParticleCount=e,this.glitterParticleSize=h||1,this.generateParticles(),this.debugArea=document.getElementById("debugArea"),this.debugArea.textContent=`Gamma: ${this.tilt.x}`,window.addEventListener("deviceorientation",this.handleOrientation.bind(this))}generateParticles(){for(let i=0;i<this.glitterParticleCount;i++){const i=Math.random()*this.width,e=Math.random()*this.height,s=90*Math.random()-45,h=this.glitterColors[Math.floor(Math.random()*this.glitterColors.length)];this.glitterParticles.push(new t(this.ctx,i,e,s,h,this.glitterParticleSize,this.tilt.x))}}render(){this.ctx.fillStyle=this.bgColor,this.ctx.fillRect(0,0,this.width,this.height),this.glitterParticles.forEach((t=>{t.viewingAngle=this.tilt.x,t.draw()})),this.ctx.font="20px Arial",this.ctx.fillStyle="white",this.ctx.fillText(`Tilt: ${this.tilt.x}`,50,50),window.requestAnimationFrame(this.render.bind(this))}handleOrientation(t){this.tilt.x=t.gamma,console.log(this.tilt.x),this.debugArea.textContent=`Gamma: ${this.tilt.x}`}}(e,600).render();
